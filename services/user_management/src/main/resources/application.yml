server:
  port: ${USER_MANAGEMENT_SERVICE_PORT:8090}
spring:
  application:
    name: userManagement
  datasource:
    username: ${USER_MANAGEMENT_POSTGRES_USERNAME}
    password: ${USER_MANAGEMENT_POSTGRES_PASSWORD}
    url: jdbc:postgresql://localhost:5432/user_management
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: 'true'
        order_inserts: true
    hibernate:
      ddl-auto: update
    show-sql: true

  kafka:
    bootstrap-servers: localhost:29092


    consumer:
      group-id: user-management-consumer-group
      auto-offset-reset: earliest
      topic:
        ratings-requiring-followers-data: ${KAFKA_TOPIC_RATINGS_REQUIRING_FOLLOWERS_DATA}

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      topic:
        ratings-with-followers-data: ${KAFKA_TOPIC_RATINGS_WITH_FOLLOWERS_DATA}




