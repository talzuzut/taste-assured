#secrets:
#  postgres_user:
#        file: ./secrets/postgres_username.txt
#  postgres_password:
#        file: ./secrets/postgres_password.txt
#  pgadmin_email:
#      file: ./secrets/pgadmin_email.txt
#  pgadmin_password:
#      file: ./secrets/pgadmin_password.txt
#  mongodb_username:
#      file: ./secrets/mongodb_username.txt
#  mongodb_password:
#      file: ./secrets/mongodb_password.txt
#  mongodb_host:
#      file: ./secrets/mongodb_host.txt
services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_HOSTNAME: zookeeper
    ports:
      - 22181:2181



  kafka:
    image: confluentinc/cp-kafka:6.2.0
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1



  mongodb:
    image: mongo
    container_name: mongo_db
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_db:/data/db
      - config_db:/data/configdb
    networks:
      - mongo-net

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_OPTIONS_EDITORTHEME: ambiance
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongodb
    networks:
      - mongo-net
    depends_on:
      - mongodb

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge
  kafka-net:
    driver: bridge
  mongo-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  #  zookeeper_data:
  #    driver: local
  kafka_data:
    driver: local
  mongo_db:
  config_db:
